import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import json
import numpy as np
import os

def annotate_walls(image_path, output_json_path):
    img = mpimg.imread(image_path)
    fig, ax = plt.subplots()
    ax.imshow(img)

    walls = []
    current_points = []
    in_opening_mode = False  # üß† —Ñ–ª–∞–≥, –æ—Ç–∫–ª—é—á–∞—é—â–∏–π –∫–ª–∏–∫–∏ –ø—Ä–∏ —Ä–∞–∑–º–µ—Ç–∫–µ –ø—Ä–æ—ë–º–∞

    def onclick(event):
        nonlocal current_points, in_opening_mode
        if in_opening_mode:
            return  # üõë –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–ª–∏–∫–∏, –ø–æ–∫–∞ —Ä–∞–∑–º–µ—á–∞–µ—Ç—Å—è –ø—Ä–æ—ë–º
        if event.xdata and event.ydata:
            x, y = int(event.xdata), int(event.ydata)
            current_points.append([x, y])
            ax.plot(x, y, 'ro')
            ax.text(x + 5, y - 10, f'{len(current_points)}', color='red')
            fig.canvas.draw()

            if len(current_points) == 4:
                print("\n‚úÖ 4 —Ç–æ—á–∫–∏ –≤—ã–±—Ä–∞–Ω—ã. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç–µ–Ω—ã:")
                name = input("‚Üí –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–µ–Ω—ã: ")
                width = float(input("‚Üí –®–∏—Ä–∏–Ω–∞ —Å—Ç–µ–Ω—ã (—Å–º): "))
                height = float(input("‚Üí –í—ã—Å–æ—Ç–∞ —Å—Ç–µ–Ω—ã (—Å–º): "))

                wall_openings = []
                add_opening = input("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—ë–º—ã –Ω–∞ —ç—Ç–æ–π —Å—Ç–µ–Ω–µ? (y/n): ").lower().strip()
                while add_opening == 'y':
                    print("\nüî≥ –£–∫–∞–∂–∏ 4 —Ç–æ—á–∫–∏ –ø—Ä–æ—ë–º–∞:")
                    opening_pts = []
                    count = 1

                    in_opening_mode = True  # ‚úÖ –≤–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å onclick

                    while len(opening_pts) < 4:
                        print(f"    üîπ –ö–ª–∏–∫–Ω–∏ —Ç–æ—á–∫—É {count}/4")
                        pts = plt.ginput(1, timeout=-1)
                        if pts:
                            px, py = int(pts[0][0]), int(pts[0][1])
                            opening_pts.append([px, py])
                            ax.plot(px, py, 'bo')
                            ax.text(px + 5, py - 5, f'{count}', color='blue')
                            fig.canvas.draw()
                            count += 1

                    in_opening_mode = False  # üîÑ –æ—Ç–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥

                    wall_openings.append(opening_pts)
                    print(f"‚úÖ –ü—Ä–æ—ë–º –¥–æ–±–∞–≤–ª–µ–Ω: {opening_pts}")
                    add_opening = input("–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë –ø—Ä–æ—ë–º? (y/n): ").lower().strip()

                walls.append({
                    "name": name,
                    "points": current_points.copy(),
                    "width_cm": width,
                    "height_cm": height,
                    "openings": wall_openings
                })
                print(f"üî∏ –°—Ç–µ–Ω–∞ '{name}' –¥–æ–±–∞–≤–ª–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –∫–ª–∏–∫–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é.")
                current_points.clear()

    def onkey(event):
        if event.key == 'enter':
            print("\nüíæ –†–∞–∑–º–µ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–æ—Ö—Ä–∞–Ω—è–µ–º JSON...")
            data = {
                "image_path": image_path,  # ‚úÖ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫–∞–∫ –µ—Å—Ç—å
                "walls": walls
            }
            with open(output_json_path, 'w', encoding='utf-8') as f:
                json.dump(data, f, ensure_ascii=False, indent=2)
            print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ {output_json_path}")
            plt.close()

    fig.canvas.mpl_connect('button_press_event', onclick)
    fig.canvas.mpl_connect('key_press_event', onkey)
    plt.title("–ö–ª–∏–∫–Ω–∏ 4 —Ç–æ—á–∫–∏ –Ω–∞ –∫–∞–∂–¥—É—é —Å—Ç–µ–Ω—É. –ù–∞–∂–º–∏ Enter, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å.")
    plt.show()

# –ü—Ä–∏–º–µ—Ä –∑–∞–ø—É—Å–∫–∞
if __name__ == "__main__":
    annotate_walls("rooms/room2.png", "room_configs/room2.json")
